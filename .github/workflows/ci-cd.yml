name: CI / CD

on:
    push:
        branches: [main]
    pull_request:

env:
    GCP_PROJECT: contract-central-c710c
    IMAGE_NAME: backend-gcp-pubsub
    REGION: europe-west1
    SERVICE: contract-central-backend-nestjs

jobs:
    build-test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - uses: actions/setup-node@v4
              with: { node-version: 20 }

            - name: Install deps & cache
              uses: pnpm/action-setup@v2
              with: { version: 8 }
            - run: pnpm install --frozen-lockfile

            - run: pnpm lint
            - run: pnpm test:cov

            - name: Build dist
              run: pnpm build

            - name: Build Docker image
              run: |
                  docker build -t gcr.io/$GCP_PROJECT/$IMAGE_NAME:$GITHUB_SHA .

            - name: Upload image to GAR
              uses: google-github-actions/auth@v2
              with:
                  workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
                  service_account: 'nest-backend@${{ env.GCP_PROJECT }}.iam.gserviceaccount.com'

            - uses: google-github-actions/setup-gcloud@v2

            - run: |
                  gcloud auth configure-docker europe-west1-docker.pkg.dev --quiet
                  docker push gcr.io/$GCP_PROJECT/$IMAGE_NAME:$GITHUB_SHA

    deploy:
        needs: build-test
        if: github.ref == 'refs/heads/main'
        runs-on: ubuntu-latest
        steps:
            - uses: google-github-actions/auth@v2
              with:
                  workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
                  service_account: 'nest-backend@${{ env.GCP_PROJECT }}.iam.gserviceaccount.com'

            - uses: google-github-actions/deploy-cloudrun@v2
              with:
                  service: ${{ env.SERVICE }}
                  image: gcr.io/${{ env.GCP_PROJECT }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
                  region: ${{ env.REGION }}
                  env_vars: |
                      NODE_ENV=production
                      FIREBASE_PROJECT=${{ env.GCP_PROJECT }}
                  flags: --allow-unauthenticated=false
