services:
    backend-dev:
        build:
            context: .
            dockerfile: Dockerfile.dev
        ports:
            - '3000:3000'
        volumes:
            - .:/app
        command: npm run start:dev
        depends_on:
            - kafka
        networks:
            - app-network

    backend-prod:
        build:
            context: .
            dockerfile: Dockerfile.prod
        ports:
            - '3000:3000'
        command: npm run start:prod
        depends_on:
            - kafka
        networks:
            - app-network

    kafka:
        image: apache/kafka-native:3.9.0
        container_name: kafka
        ports:
            - '9092:9092'
            - '9093:9093'
        environment:
            KAFKA_CFG_NODE_ID: 1
            KAFKA_CFG_PROCESS_ROLES: broker,controller
            KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
            KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
            KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
            KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
            KAFKA_CFG_LOG_DIRS: /tmp/kafka-logs
            KAFKA_CFG_KRAFT_MODE: true
        volumes:
            - ./kafka-logs:/tmp/kafka-logs
        networks:
            - app-network

networks:
    app-network:
        driver: bridge
